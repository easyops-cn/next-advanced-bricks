name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_bricks:
    name: Build bricks
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Setup timezone
      uses: zcong1993/setup-timezone@master
      with:
        timezone: Asia/Shanghai

    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache for yarn
      uses: actions/cache@v4
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: node-cache-${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          node-cache-${{ runner.os }}-yarn-

    - name: Cache nx cache
      uses: actions/cache@v4
      with:
        save-always: true
        path: .cache
        key: ${{ runner.os }}-nx-${{ hashFiles('yarn.lock', 'package.json', 'shared/common-bricks/common-bricks.json') }}-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-nx-${{ hashFiles('yarn.lock', 'package.json', 'shared/common-bricks/common-bricks.json') }}-

    # Fix `yarn install --frozen-lockfile` not working in monorepo.
    # https://github.com/yarnpkg/yarn/issues/5840#issuecomment-468782288
    - name: Get checksum before yarn install
      id: yarn-lock-check-before
      run: echo "::set-output name=sum::$(cksum yarn.lock)"

    - run: yarn install --frozen-lockfile

    - name: Get checksum after yarn install
      id: yarn-lock-check-after
      run: echo "::set-output name=sum::$(cksum yarn.lock)"

    - name: Exit if yarn.lock updated
      run: exit 1
      if: steps.yarn-lock-check-before.outputs.sum != steps.yarn-lock-check-after.outputs.sum

    - run: yarn build
      env:
        NX_REJECT_UNKNOWN_LOCAL_CACHE: '0'

    - run: yarn test:ci
      env:
        NX_REJECT_UNKNOWN_LOCAL_CACHE: '0'

    - name: Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: bricks/*/.coverage/cobertura-coverage.xml,shared/*/.coverage/cobertura-coverage.xml,!.cache/**/*

    - uses: easyops-cn/actions-next-publish-from-tags@master
      with:
        npm-token: ${{ secrets.NPM_TOKEN }}
      if: github.event_name == 'push'

    - uses: actions/upload-artifact@v4
      with:
        name: brick-artifacts
        path: |
          bricks/*/dist
          bricks/*/docs
          bricks/*/src/**/example.yaml
          bricks/*/src/**/example.html
          netlify.toml
          !*.map
          !bricks/v2-adapter
          !bricks/ui-test
          !bricks/vb-experiment
          !bricks/form-renderer
        retention-days: 1

  build_docs:
    name: Build docs
    needs: build_bricks
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4
      with:
        repository: easyops-cn/brick-docs
        ref: refs/heads/master
        token: ${{ secrets.GH_TOKEN_EVE }}

    - uses: actions/download-artifact@v4
      with:
        name: brick-artifacts
        path: ci-bricks

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache for yarn
      uses: actions/cache@v4
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: docs-node-cache-${{ runner.os }}-yarn-v3-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          docs-node-cache-${{ runner.os }}-yarn-v3-

    - name: Install dependencies (docs)
      run: yarn install --frozen-lockfile

    - name: Build (docs)
      run: yarn build

    - name: Deploy to Netlify (pull request)
      id: netlify-deploy
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './build'
        production-branch: master
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "${{ github.event.pull_request.title }}"
        alias: docs-preview-${{ github.event.number }}
        netlify-config-path: ./ci-bricks/netlify.toml
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 2
      if: github.event_name == 'pull_request'

    - name: Deploy to gh-pages (push to master)
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.GH_TOKEN_EVE }}
        external_repository: easyops-cn/bricks
        cname: bricks.js.org
        publish_dir: ./build
        publish_branch: gh-pages
        force_orphan: true
      if: github.event_name == 'push'
