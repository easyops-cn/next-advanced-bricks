import path from "node:path";
import { createRequire } from "node:module";
import { spawn } from "node:child_process";

const require = createRequire(import.meta.url);
const babel = getBinPath("@babel/cli", "babel");

transpile();

function transpile() {
  const task = spawn(babel, [
    "src",
    "--out-dir",
    "dist",
    "--config-file",
    "./babel.config.js",
    "--extensions",
    ".ts,.tsx,.js,.jsx",
    "--copy-files",
    "--delete-dir-on-start",
    "--watch"
  ]);

  task.stdout.on("data", (data) => {
    const out = String(data);
    console.log(out);
    if (out.includes("Successfully compiled ")) {
      spawn("node", [
        "scripts/build.js"
      ], {
        stdio: "inherit"
      });
    }
  });

  task.stderr.on('data', (data) => {
    console.error(`${data}`);
  });

  task.on('close', (code) => {
    console.log(`Transpile exited with code ${code}`);
  });
}

function getBinPath(packageName, binName = packageName) {
  const packageJsonPath = require.resolve(`${packageName}/package.json`);
  const packageJson = require(packageJsonPath);
  if (typeof packageJson.bin === "string") {
    return packageJson.bin;
  }
  return path.join(path.dirname(packageJsonPath), packageJson.bin[binName]);
}
