[
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "hostname",
    "propertyName": "主机名",
    "system": "现在有“主机”模型的“主机名”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“主机名”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“主机名”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，字重加粗，默认颜色文本显示；\n3. 使用大号字号，默认颜色文本显示；\n4. 使用特大号字号，默认颜色文本显示，适用于标题场景。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"x-large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "x-large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "_agentStatus",
    "propertyName": "agent状态",
    "system": "现在有“主机”模型的“agent状态”属性，类型是枚举：未安装、异常、正常、已卸载、维护中。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“agent状态”属性，类型是枚举：未安装、异常、正常、已卸载、维护中。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "根据“主机”模型的“agent状态”属性，类型是枚举，包含：未安装、异常、正常、已卸载、维护中。按视觉重量从低到高，给出的候选显示方案如下：\n\n1. 使用标签形式，中等尺寸，灰色背景；\n2. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n3. 使用标签形式，大尺寸，根据状态值从色板中挑选合适的颜色；\n4. 使用标签形式，大尺寸，加粗字体，根据状态值从色板中挑选合适的颜色；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"未安装\": \"gray\",\n        \"异常\": \"red\",\n        \"正常\": \"green\",\n        \"已卸载\": \"orange\",\n        \"维护中\": \"yellow\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"未安装\": \"gray\",\n        \"异常\": \"red\",\n        \"正常\": \"green\",\n        \"已卸载\": \"orange\",\n        \"维护中\": \"yellow\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"fontWeight\": \"bold\",\n      \"palette\": {\n        \"未安装\": \"gray\",\n        \"异常\": \"red\",\n        \"正常\": \"green\",\n        \"已卸载\": \"orange\",\n        \"维护中\": \"yellow\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "未安装": "gray",
            "异常": "red",
            "正常": "green",
            "已卸载": "orange",
            "维护中": "yellow"
          }
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "未安装": "gray",
            "异常": "red",
            "正常": "green",
            "已卸载": "orange",
            "维护中": "yellow"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "fontWeight": "bold",
          "palette": {
            "未安装": "gray",
            "异常": "red",
            "正常": "green",
            "已卸载": "orange",
            "维护中": "yellow"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "cpuModel",
    "propertyName": "CPU型号",
    "system": "现在有“主机”模型的“CPU型号”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“CPU型号”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“CPU型号”属性，类型是字符串，按视觉重量从低到高，可以有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "env",
    "propertyName": "环境",
    "system": "现在有“主机”模型的“环境”属性，类型是枚举：开发环境、预发布环境。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“环境”属性，类型是枚举：开发环境、预发布环境。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“环境”属性，类型是枚举：开发环境、预发布环境。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用标签形式，中等尺寸，灰色背景；\n3. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n4. 使用标签形式，大尺寸，根据状态值从色板中挑选合适的颜色。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"开发环境\": \"green\",\n        \"预发布环境\": \"orange\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"开发环境\": \"green\",\n        \"预发布环境\": \"orange\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "enum",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "开发环境": "green",
            "预发布环境": "orange"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "开发环境": "green",
            "预发布环境": "orange"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "installedPatch",
    "propertyName": "已安装的补丁信息",
    "system": "现在有“主机”模型的“已安装的补丁信息”属性，类型是结构体列表。该结构体定义的字段有：补丁编号（articleId）、安装时间（installedTime）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“已安装的补丁信息”属性，类型是结构体列表。该结构体定义的字段有：补丁编号（articleId）、安装时间（installedTime）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${DATA.articleId} (${DATA.installedTime})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${DATA.articleId} - 安装时间: ${DATA.installedTime}` %>\",\n    \"maxItems\": 5\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"补丁编号\",\n        \"dataIndex\": \"articleId\"\n      },\n      {\n        \"title\": \"安装时间\",\n        \"dataIndex\": \"installedTime\",\n        \"formatter\": {\n          \"type\": \"date-time\",\n          \"format\": \"relative\"\n        }\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"articleId\",\n      \"description\": \"installedTime\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.articleId} (${ITEM.installedTime})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.articleId} - 安装时间: ${ITEM.installedTime}` %>",
        "maxItems": 5
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "补丁编号",
            "dataIndex": "articleId"
          },
          {
            "title": "安装时间",
            "dataIndex": "installedTime",
            "formatter": {
              "type": "date-time",
              "format": "relative"
            }
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "articleId",
          "description": "installedTime"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "isSinglePower",
    "propertyName": "是否单电源",
    "system": "现在有“主机”模型的“是否单电源”属性，类型是布尔。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“是否单电源”属性，类型是布尔。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“是否单电源”属性，类型是布尔，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用标签形式，中等尺寸，根据布尔值显示不同的颜色；\n4. 使用标签形式，大尺寸，根据布尔值显示不同的颜色。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"boolean\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"boolean\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"boolean\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"true\": \"red\",\n        \"false\": \"green\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"boolean\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"true\": \"red\",\n        \"false\": \"green\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "boolean",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "boolean",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "boolean",
        "style": {
          "size": "medium",
          "palette": {
            "true": "red",
            "false": "green"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "boolean",
        "style": {
          "size": "large",
          "palette": {
            "true": "red",
            "false": "green"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "location",
    "propertyName": "地域",
    "system": "现在有“主机”模型的“地域”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“地域”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“地域”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "product",
    "propertyName": "所属产品",
    "system": "现在有“主机”模型的“所属产品”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“所属产品”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“所属产品”属性，类型是字符串，按视觉重量从低到高，可以有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "use",
    "propertyName": "用途",
    "system": "现在有“主机”模型的“用途”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“用途”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "根据“主机”模型的“用途”属性，类型是字符串，按视觉重量从低到高，可以给出以下几种候选显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示；\n\n转换为标准 JSON 格式输出如下：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "version",
    "propertyName": "版本",
    "system": "现在有“主机”模型的“版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“版本”属性，类型是字符串，按视觉重量从低到高，可以有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示；\n\n转换为 JSON 格式如下：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "vmType",
    "propertyName": "虚拟化类型",
    "system": "现在有“主机”模型的“虚拟化类型”属性，类型是枚举：physical、lxc、kvm、docker、vcenter。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“虚拟化类型”属性，类型是枚举：physical、lxc、kvm、docker、vcenter。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“虚拟化类型”属性，类型是枚举，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用标签形式，中等尺寸，灰色背景；\n3. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n4. 使用标签形式，大尺寸，根据状态值从色板中挑选合适的颜色。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"physical\": \"green\",\n        \"lxc\": \"blue\",\n        \"kvm\": \"orange\",\n        \"docker\": \"purple\",\n        \"vcenter\": \"red\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"physical\": \"green\",\n        \"lxc\": \"blue\",\n        \"kvm\": \"orange\",\n        \"docker\": \"purple\",\n        \"vcenter\": \"red\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "enum",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "physical": "green",
            "lxc": "blue",
            "kvm": "orange",
            "docker": "purple",
            "vcenter": "red"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "physical": "green",
            "lxc": "blue",
            "kvm": "orange",
            "docker": "purple",
            "vcenter": "red"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "aliveDate",
    "propertyName": "有效日期",
    "system": "现在有“主机”模型的“有效日期”属性，类型是日期。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“有效日期”属性，类型是日期。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“有效日期”属性，类型是日期，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示，使用相对时间格式；\n2. 使用中等字号，默认颜色文本显示，使用相对时间格式；\n3. 使用中等字号，默认颜色文本显示，使用精确时间格式；\n4. 使用大号字号，默认颜色文本显示，使用精确时间格式。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "date",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "vmName",
    "propertyName": "虚拟化实例名称",
    "system": "现在有“主机”模型的“虚拟化实例名称”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“虚拟化实例名称”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“虚拟化实例名称”属性，类型是字符串，按视觉重量从低到高，可以有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "creat_time",
    "propertyName": "创建时间",
    "system": "现在有“主机”模型的“创建时间”属性，类型是日期时间。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“创建时间”属性，类型是日期时间。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“创建时间”属性，类型是日期时间，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示，使用相对时间格式；\n2. 使用中等字号，默认颜色文本显示，使用相对时间格式；\n3. 使用中等字号，默认颜色文本显示，使用精确时间格式；\n4. 使用大号字号，默认颜色文本显示，使用精确时间格式。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"date-time\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"date-time\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"date-time\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"date-time\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "date-time",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "date-time",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "date-time",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "date-time",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "_mac",
    "propertyName": "物理地址",
    "system": "现在有“主机”模型的“物理地址”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“物理地址”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“物理地址”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "_uuid",
    "propertyName": "uuid",
    "system": "现在有“主机”模型的“uuid”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“uuid”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“uuid”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "agentVersion",
    "propertyName": "agent版本",
    "system": "现在有“主机”模型的“agent版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“agent版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“agent版本”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "eth",
    "propertyName": "网卡信息",
    "system": "现在有“主机”模型的“网卡信息”属性，类型是结构体列表。该结构体定义的字段有：网卡（name）、状态（status）、关联IP（ip）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“网卡信息”属性，类型是结构体列表。该结构体定义的字段有：网卡（name）、状态（status）、关联IP（ip）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.name} (${ITEM.status})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.name} (${ITEM.status}): ${ITEM.ip}` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"网卡\",\n        \"dataIndex\": \"name\"\n      },\n      {\n        \"title\": \"状态\",\n        \"dataIndex\": \"status\"\n      },\n      {\n        \"title\": \"关联IP\",\n        \"dataIndex\": \"ip\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"name\",\n      \"description\": \"status\"\n    },\n    \"formatter\": {\n      \"type\": \"text\",\n      \"format\": \"<% `${DATA.name} (${DATA.status})` %>\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.name} (${ITEM.status})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.name} (${ITEM.status}): ${ITEM.ip}` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "网卡",
            "dataIndex": "name"
          },
          {
            "title": "状态",
            "dataIndex": "status"
          },
          {
            "title": "关联IP",
            "dataIndex": "ip"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "name",
          "description": "status"
        },
        "formatter": {
          "type": "text",
          "format": "<% `${DATA.name} (${DATA.status})` %>"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "memo",
    "propertyName": "备注",
    "system": "现在有“主机”模型的“备注”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“备注”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“备注”属性，类型是字符串，按视觉重量从低到高，可以给出以下几种候选显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；（可选，根据备注内容的重要性决定是否需要）\n4. 使用大号字号，默认颜色文本显示。（通常不适用于备注类信息，除非在特定场景下需要强调）\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```\n\n但考虑到备注类信息通常不需要高视觉重量的显示，因此实际应用中可能只会使用前两种方案。所以，更实际的返回结果可能是：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "osArchitecture",
    "propertyName": "操作系统架构",
    "system": "现在有“主机”模型的“操作系统架构”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“操作系统架构”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“操作系统架构”属性，类型是字符串，按视觉重量从低到高，可以有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "osDistro",
    "propertyName": "操作系统发行版本",
    "system": "现在有“主机”模型的“操作系统发行版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“操作系统发行版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“操作系统发行版本”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "osRelease",
    "propertyName": "操作系统内核发行版本",
    "system": "现在有“主机”模型的“操作系统内核发行版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“操作系统内核发行版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "osSystem",
    "propertyName": "操作系统类型",
    "system": "现在有“主机”模型的“操作系统类型”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“操作系统类型”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“操作系统类型”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "osVersion",
    "propertyName": "操作系统",
    "system": "现在有“主机”模型的“操作系统”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“操作系统”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“操作系统”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "provider",
    "propertyName": "供应商",
    "system": "现在有“主机”模型的“供应商”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“供应商”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "根据“主机”模型的“供应商”属性，类型是字符串，按视觉重量从低到高，以下为2-5种候选显示方案的JSON输出：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "service",
    "propertyName": "服务信息",
    "system": "现在有“主机”模型的“服务信息”属性，类型是结构体列表。该结构体定义的字段有：名称（name）、当前工作目录（cwd）、执行路径（exe）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“服务信息”属性，类型是结构体列表。该结构体定义的字段有：名称（name）、当前工作目录（cwd）、执行路径（exe）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.name} (${ITEM.exe})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.name} (${ITEM.cwd})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"名称\",\n        \"dataIndex\": \"name\"\n      },\n      {\n        \"title\": \"执行路径\",\n        \"dataIndex\": \"exe\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"name\",\n      \"description\": \"cwd\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.name} (${ITEM.exe})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.name} (${ITEM.cwd})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "名称",
            "dataIndex": "name"
          },
          {
            "title": "执行路径",
            "dataIndex": "exe"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "name",
          "description": "cwd"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "status",
    "propertyName": "运营状态",
    "system": "现在有“主机”模型的“运营状态”属性，类型是枚举：运营中、未上线、维修中、报废、已下线、备用、故障中、下线隔离中、开发机、测试机。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“运营状态”属性，类型是枚举：运营中、未上线、维修中、报废、已下线、备用、故障中、下线隔离中、开发机、测试机。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"运营中\": \"green\",\n        \"未上线\": \"gray\",\n        \"维修中\": \"orange\",\n        \"报废\": \"red\",\n        \"已下线\": \"gray\",\n        \"备用\": \"gray\",\n        \"故障中\": \"red\",\n        \"下线隔离中\": \"gray\",\n        \"开发机\": \"blue\",\n        \"测试机\": \"blue\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"运营中\": \"green\",\n        \"未上线\": \"gray\",\n        \"维修中\": \"orange\",\n        \"报废\": \"red\",\n        \"已下线\": \"gray\",\n        \"备用\": \"gray\",\n        \"故障中\": \"red\",\n        \"下线隔离中\": \"gray\",\n        \"开发机\": \"blue\",\n        \"测试机\": \"blue\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"x-large\",\n      \"palette\": {\n        \"运营中\": \"green\",\n        \"未上线\": \"gray\",\n        \"维修中\": \"orange\",\n        \"报废\": \"red\",\n        \"已下线\": \"gray\",\n        \"备用\": \"gray\",\n        \"故障中\": \"red\",\n        \"下线隔离中\": \"gray\",\n        \"开发机\": \"blue\",\n        \"测试机\": \"blue\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "运营中": "green",
            "未上线": "gray",
            "维修中": "orange",
            "报废": "red",
            "已下线": "gray",
            "备用": "gray",
            "故障中": "red",
            "下线隔离中": "gray",
            "开发机": "blue",
            "测试机": "blue"
          }
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "运营中": "green",
            "未上线": "gray",
            "维修中": "orange",
            "报废": "red",
            "已下线": "gray",
            "备用": "gray",
            "故障中": "red",
            "下线隔离中": "gray",
            "开发机": "blue",
            "测试机": "blue"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "x-large",
          "palette": {
            "运营中": "green",
            "未上线": "gray",
            "维修中": "orange",
            "报废": "red",
            "已下线": "gray",
            "备用": "gray",
            "故障中": "red",
            "下线隔离中": "gray",
            "开发机": "blue",
            "测试机": "blue"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "deviceId",
    "propertyName": "设备ID",
    "system": "现在有“主机”模型的“设备ID”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“设备ID”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“设备ID”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "_agentHeartBeat",
    "propertyName": "agent心跳",
    "system": "现在有“主机”模型的“agent心跳”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“agent心跳”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“agent心跳”属性，类型是整型，我们假设这个属性表示的是agent与服务器之间的最后一次心跳时间，以秒为单位。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示，使用相对时间格式化；\n2. 使用中等字号，根据心跳时间挑选合适的颜色，使用相对时间格式化；\n3. 使用大号字号，根据心跳时间挑选合适的颜色，使用相对时间格式化；\n4. 使用大号字号，根据心跳时间挑选合适的颜色，使用精确时间格式化；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"cost-time\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 60,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 61,\n        \"end\": 300,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 301,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ],\n    \"formatter\": {\n      \"type\": \"cost-time\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 60,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 61,\n        \"end\": 300,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 301,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ],\n    \"formatter\": {\n      \"type\": \"cost-time\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 60,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 61,\n        \"end\": 300,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 301,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ],\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "cost-time"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium"
        },
        "ranges": [
          {
            "end": 60,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 61,
            "end": 300,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 301,
            "style": {
              "color": "red"
            }
          }
        ],
        "formatter": {
          "type": "cost-time"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large"
        },
        "ranges": [
          {
            "end": 60,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 61,
            "end": 300,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 301,
            "style": {
              "color": "red"
            }
          }
        ],
        "formatter": {
          "type": "cost-time"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large"
        },
        "ranges": [
          {
            "end": 60,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 61,
            "end": 300,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 301,
            "style": {
              "color": "red"
            }
          }
        ],
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "time_sync",
    "propertyName": "是否时间同步",
    "system": "现在有“主机”模型的“是否时间同步”属性，类型是枚举：是、否。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“是否时间同步”属性，类型是枚举：是、否。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“是否时间同步”属性，类型是枚举：是、否。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用标签形式，中等尺寸，灰色背景；\n4. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"是\": \"green\",\n        \"否\": \"red\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "enum",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "enum",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "是": "green",
            "否": "red"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "maintenance_window",
    "propertyName": "维护窗口",
    "system": "现在有“主机”模型的“维护窗口”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“维护窗口”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“维护窗口”属性，类型是字符串，按视觉重量从低到高，可以有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "uptime",
    "propertyName": "启动时长",
    "system": "现在有“主机”模型的“启动时长”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“启动时长”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“启动时长”属性，类型是字符串，但考虑到启动时长通常是一个时间间隔，我们应当将其视为耗时类型的数据。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n由于启动时长通常以耗时格式显示，我们应当在格式化设置中指定耗时格式。下面按照上述方案，输出标准的 JSON 格式内容：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"cost-time\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"cost-time\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"cost-time\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"cost-time\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "cost-time"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "cost-time"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "cost-time"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "cost-time"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "NTP",
    "propertyName": "NTP服务器",
    "system": "现在有“主机”模型的“NTP服务器”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“NTP服务器”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "根据“主机”模型的“NTP服务器”属性，类型是字符串，按视觉重量从低到高，以下是2-5种候选显示方案的JSON输出：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "customer",
    "propertyName": "所属客户",
    "system": "现在有“主机”模型的“所属客户”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“所属客户”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "host_spec",
    "propertyName": "主机规格",
    "system": "现在有“主机”模型的“主机规格”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“主机规格”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“主机规格”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "create_time",
    "propertyName": "录入时间",
    "system": "现在有“主机”模型的“录入时间”属性，类型是日期。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“录入时间”属性，类型是日期。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“录入时间”属性，类型是日期，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示，使用相对时间格式；\n2. 使用中等字号，默认颜色文本显示，使用相对时间格式；\n3. 使用中等字号，默认颜色文本显示，使用精确时间格式；\n4. 使用大号字号，默认颜色文本显示，使用精确时间格式。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "date",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "device_model",
    "propertyName": "型号",
    "system": "现在有“主机”模型的“型号”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“型号”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“型号”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "RPO",
    "propertyName": "RPO",
    "system": "现在有“主机”模型的“RPO”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“RPO”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“RPO”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "vmware_host",
    "propertyName": "是否为vmware宿主机",
    "system": "现在有“主机”模型的“是否为vmware宿主机”属性，类型是枚举：是、否。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“是否为vmware宿主机”属性，类型是枚举：是、否。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“是否为vmware宿主机”属性，类型是枚举：是、否。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用标签形式，中等尺寸，灰色背景；\n4. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"是\": \"green\",\n        \"否\": \"red\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "enum",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "enum",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "是": "green",
            "否": "red"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "is_database",
    "propertyName": "是否数据库主机",
    "system": "现在有“主机”模型的“是否数据库主机”属性，类型是布尔。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“是否数据库主机”属性，类型是布尔。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“是否数据库主机”属性，类型是布尔，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用标签形式，中等尺寸，灰色背景；\n4. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"boolean\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"boolean\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"boolean\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"boolean\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"false\": \"gray\",\n        \"true\": \"green\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "boolean",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "boolean",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "boolean",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "boolean",
        "style": {
          "size": "medium",
          "palette": {
            "false": "gray",
            "true": "green"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "resourceType",
    "propertyName": "计算资源类型",
    "system": "现在有“主机”模型的“计算资源类型”属性，类型是枚举：X86虚拟机、X86物理机、小型机、其他、ARM物理机。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“计算资源类型”属性，类型是枚举：X86虚拟机、X86物理机、小型机、其他、ARM物理机。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "根据“主机”模型的“计算资源类型”属性，类型是枚举，给出的显示方案如下：\n\n1. 使用标签形式，中等尺寸，灰色背景；\n2. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n3. 使用标签形式，大尺寸，根据状态值从色板中挑选合适的颜色；\n4. 使用标签形式，大尺寸，加粗字体，根据状态值从色板中挑选合适的颜色；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"X86虚拟机\": \"blue\",\n        \"X86物理机\": \"green\",\n        \"小型机\": \"orange\",\n        \"其他\": \"gray\",\n        \"ARM物理机\": \"purple\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"X86虚拟机\": \"blue\",\n        \"X86物理机\": \"green\",\n        \"小型机\": \"orange\",\n        \"其他\": \"gray\",\n        \"ARM物理机\": \"purple\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"fontWeight\": \"bold\",\n      \"palette\": {\n        \"X86虚拟机\": \"blue\",\n        \"X86物理机\": \"green\",\n        \"小型机\": \"orange\",\n        \"其他\": \"gray\",\n        \"ARM物理机\": \"purple\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "X86虚拟机": "blue",
            "X86物理机": "green",
            "小型机": "orange",
            "其他": "gray",
            "ARM物理机": "purple"
          }
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "X86虚拟机": "blue",
            "X86物理机": "green",
            "小型机": "orange",
            "其他": "gray",
            "ARM物理机": "purple"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "fontWeight": "bold",
          "palette": {
            "X86虚拟机": "blue",
            "X86物理机": "green",
            "小型机": "orange",
            "其他": "gray",
            "ARM物理机": "purple"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "type",
    "propertyName": "主机类型",
    "system": "现在有“主机”模型的“主机类型”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“主机类型”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“主机类型”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "hosts",
    "propertyName": "hosts文件",
    "system": "现在有“主机”模型的“hosts文件”属性，类型是结构体列表。该结构体定义的字段有：ip（ip）、hostname（hostname）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“hosts文件”属性，类型是结构体列表。该结构体定义的字段有：ip（ip）、hostname（hostname）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.ip} ${ITEM.hostname}` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.ip} (${ITEM.hostname})` %>\",\n    \"maxItems\": 5\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"IP\",\n        \"dataIndex\": \"ip\"\n      },\n      {\n        \"title\": \"Hostname\",\n        \"dataIndex\": \"hostname\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"ip\",\n      \"description\": \"hostname\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.ip} ${ITEM.hostname}` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.ip} (${ITEM.hostname})` %>",
        "maxItems": 5
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "IP",
            "dataIndex": "ip"
          },
          {
            "title": "Hostname",
            "dataIndex": "hostname"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "ip",
          "description": "hostname"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "sn",
    "propertyName": "设备SN",
    "system": "现在有“主机”模型的“设备SN”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“设备SN”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“设备SN”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "vg",
    "propertyName": "vg信息",
    "system": "现在有“主机”模型的“vg信息”属性，类型是结构体。该结构体定义的字段有：VG名称（VG_Name）、VG大小（VG_Size）、最小存储单元（PE_Size）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“vg信息”属性，类型是结构体。该结构体定义的字段有：VG名称（VG_Name）、VG大小（VG_Size）、最小存储单元（PE_Size）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct\",\n    \"content\": \"<% `${DATA.VG_Name} (${DATA.VG_Size})` %>\"\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct\",\n    \"content\": \"<% `${DATA.VG_Name} (${DATA.VG_Size}, PE Size: ${DATA.PE_Size})` %>\"\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"detail\",\n    \"type\": \"struct\",\n    \"fields\": [\n      {\n        \"title\": \"VG名称\",\n        \"dataIndex\": \"VG_Name\"\n      },\n      {\n        \"title\": \"VG大小\",\n        \"dataIndex\": \"VG_Size\"\n      },\n      {\n        \"title\": \"最小存储单元\",\n        \"dataIndex\": \"PE_Size\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card\",\n    \"type\": \"struct\",\n    \"keys\": {\n      \"title\": \"VG_Name\",\n      \"description\": \"VG_Size\"\n    },\n    \"fields\": [\n      {\n        \"title\": \"最小存储单元\",\n        \"dataIndex\": \"PE_Size\"\n      }\n    ]\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct",
        "content": "<% `${DATA.VG_Name} (${DATA.VG_Size})` %>"
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct",
        "content": "<% `${DATA.VG_Name} (${DATA.VG_Size}, PE Size: ${DATA.PE_Size})` %>"
      },
      {
        "visualWeight": 1,
        "display": "detail",
        "type": "struct",
        "fields": [
          {
            "title": "VG名称",
            "dataIndex": "VG_Name"
          },
          {
            "title": "VG大小",
            "dataIndex": "VG_Size"
          },
          {
            "title": "最小存储单元",
            "dataIndex": "PE_Size"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card",
        "type": "struct",
        "keys": {
          "title": "VG_Name",
          "description": "VG_Size"
        },
        "fields": [
          {
            "title": "最小存储单元",
            "dataIndex": "PE_Size"
          }
        ]
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "date",
    "propertyName": "日期",
    "system": "现在有“主机”模型的“日期”属性，类型是日期。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“日期”属性，类型是日期。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“日期”属性，类型是日期，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示，使用相对时间格式；\n2. 使用中等字号，默认颜色文本显示，使用相对时间格式；\n3. 使用中等字号，默认颜色文本显示，使用准确时间格式；\n4. 使用大号字号，默认颜色文本显示，使用准确时间格式。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "date",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "ticket_num",
    "propertyName": "工单号",
    "system": "现在有“主机”模型的“工单号”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“工单号”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“工单号”属性，类型是字符串，按视觉重量从低到高，可以有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "cloud_type",
    "propertyName": "云类型",
    "system": "现在有“主机”模型的“云类型”属性，类型是枚举：aliyun、tencent、openstack。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“云类型”属性，类型是枚举：aliyun、tencent、openstack。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“云类型”属性，类型是枚举：aliyun、tencent、openstack。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用标签形式，中等尺寸，灰色背景；\n3. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n4. 使用标签形式，大尺寸，根据状态值从色板中挑选合适的颜色。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"aliyun\": \"blue\",\n        \"tencent\": \"orange\",\n        \"openstack\": \"green\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"aliyun\": \"blue\",\n        \"tencent\": \"orange\",\n        \"openstack\": \"green\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "enum",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "aliyun": "blue",
            "tencent": "orange",
            "openstack": "green"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "aliyun": "blue",
            "tencent": "orange",
            "openstack": "green"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "pv",
    "propertyName": "pv信息",
    "system": "现在有“主机”模型的“pv信息”属性，类型是结构体。该结构体定义的字段有：PV（PV_Name）、VG（VG_Name）、PV大小（PV_Size）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“pv信息”属性，类型是结构体。该结构体定义的字段有：PV（PV_Name）、VG（VG_Name）、PV大小（PV_Size）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "根据“主机”模型的“pv信息”属性，类型是结构体，包含PV（PV_Name）、VG（VG_Name）、PV大小（PV_Size）字段，按视觉重量从低到高，给出以下几种候选显示方案：\n\n1. 显示 PV 名称（PV_Name）；\n2. 显示 PV 名称和 VG 名称（PV_Name 和 VG_Name）；\n3. 显示为详情信息，展示 PV 信息所有属性；\n4. 使用表格列出 PV 信息，包括 PV 名称、VG 名称和 PV 大小。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct\",\n    \"content\": \"<% DATA.PV_Name %>\"\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct\",\n    \"content\": \"<% `${DATA.PV_Name} (${DATA.VG_Name})` %>\"\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"detail\",\n    \"type\": \"struct\",\n    \"fields\": [\n      {\n        \"title\": \"PV名称\",\n        \"dataIndex\": \"PV_Name\"\n      },\n      {\n        \"title\": \"VG名称\",\n        \"dataIndex\": \"VG_Name\"\n      },\n      {\n        \"title\": \"PV大小\",\n        \"dataIndex\": \"PV_Size\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"table\",\n    \"type\": \"struct\",\n    \"columns\": [\n      {\n        \"title\": \"PV名称\",\n        \"dataIndex\": \"PV_Name\"\n      },\n      {\n        \"title\": \"VG名称\",\n        \"dataIndex\": \"VG_Name\"\n      },\n      {\n        \"title\": \"PV大小\",\n        \"dataIndex\": \"PV_Size\"\n      }\n    ]\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct",
        "content": "<% DATA.PV_Name %>"
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct",
        "content": "<% `${DATA.PV_Name} (${DATA.VG_Name})` %>"
      },
      {
        "visualWeight": 1,
        "display": "detail",
        "type": "struct",
        "fields": [
          {
            "title": "PV名称",
            "dataIndex": "PV_Name"
          },
          {
            "title": "VG名称",
            "dataIndex": "VG_Name"
          },
          {
            "title": "PV大小",
            "dataIndex": "PV_Size"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "table",
        "type": "struct",
        "columns": [
          {
            "title": "PV名称",
            "dataIndex": "PV_Name"
          },
          {
            "title": "VG名称",
            "dataIndex": "VG_Name"
          },
          {
            "title": "PV大小",
            "dataIndex": "PV_Size"
          }
        ]
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "businessIP",
    "propertyName": "业务IP",
    "system": "现在有“主机”模型的“业务IP”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“业务IP”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“业务IP”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，字重加粗，默认颜色文本显示；\n3. 使用大号字号，默认颜色文本显示；\n4. 使用特大号字号，默认颜色文本显示，适用于需要特别突出的场景，如大屏展示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"x-large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "x-large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "time_zone",
    "propertyName": "时区",
    "system": "现在有“主机”模型的“时区”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“时区”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“时区”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "DNS",
    "propertyName": "DNS服务器",
    "system": "现在有“主机”模型的“DNS服务器”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“DNS服务器”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“DNS服务器”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "samplerVersion",
    "propertyName": "sampler版本",
    "system": "现在有“主机”模型的“sampler版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“sampler版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“sampler版本”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "RTO",
    "propertyName": "RTO",
    "system": "现在有“主机”模型的“RTO”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“RTO”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“RTO”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "producer",
    "propertyName": "服务器厂商",
    "system": "现在有“主机”模型的“服务器厂商”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“服务器厂商”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“服务器厂商”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "crontabs",
    "propertyName": "定时任务",
    "system": "现在有“主机”模型的“定时任务”属性，类型是结构体列表。该结构体定义的字段有：序号（index）、执行时间（time）、执行内容（content）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“定时任务”属性，类型是结构体列表。该结构体定义的字段有：序号（index）、执行时间（time）、执行内容（content）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.index}: ${ITEM.time}` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.index}: ${ITEM.time} - ${ITEM.content}` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"序号\",\n        \"dataIndex\": \"index\"\n      },\n      {\n        \"title\": \"执行时间\",\n        \"dataIndex\": \"time\"\n      },\n      {\n        \"title\": \"执行内容\",\n        \"dataIndex\": \"content\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"content\",\n      \"description\": \"time\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.index}: ${ITEM.time}` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.index}: ${ITEM.time} - ${ITEM.content}` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "序号",
            "dataIndex": "index"
          },
          {
            "title": "执行时间",
            "dataIndex": "time"
          },
          {
            "title": "执行内容",
            "dataIndex": "content"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "content",
          "description": "time"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "remote_ip",
    "propertyName": "远程管理IP",
    "system": "现在有“主机”模型的“远程管理IP”属性，类型是字符串，远程管理IP。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“远程管理IP”属性，类型是字符串，远程管理IP。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“远程管理IP”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "usbkey",
    "propertyName": "usbkey",
    "system": "现在有“主机”模型的“usbkey”属性，类型是结构体。该结构体定义的字段有：key（key）、key序列号（key_sn）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“usbkey”属性，类型是结构体。该结构体定义的字段有：key（key）、key序列号（key_sn）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“usbkey”属性，类型是结构体，包含字段：key 和 key_sn。根据视觉重量从低到高，以下为2-5种候选显示方案：\n\n1. 显示 USB Key 的 key 属性；\n2. 显示 USB Key 的 key 和 key_sn 属性；\n3. 显示为详情信息，展示 USB Key 信息所有属性；\n4. 使用卡片形式展示 USB Key 信息所有属性，增加视觉重量。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct\",\n    \"content\": \"<% DATA.key %>\"\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct\",\n    \"content\": \"<% `${DATA.key} (${DATA.key_sn})` %>\"\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"detail\",\n    \"type\": \"struct\",\n    \"fields\": [\n      {\n        \"title\": \"Key\",\n        \"dataIndex\": \"key\"\n      },\n      {\n        \"title\": \"Key 序列号\",\n        \"dataIndex\": \"key_sn\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct\",\n    \"keys\": {\n      \"title\": \"key\",\n      \"description\": \"key_sn\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct",
        "content": "<% DATA.key %>"
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct",
        "content": "<% `${DATA.key} (${DATA.key_sn})` %>"
      },
      {
        "visualWeight": 1,
        "display": "detail",
        "type": "struct",
        "fields": [
          {
            "title": "Key",
            "dataIndex": "key"
          },
          {
            "title": "Key 序列号",
            "dataIndex": "key_sn"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct",
        "keys": {
          "title": "key",
          "description": "key_sn"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "charset",
    "propertyName": "当前字符集",
    "system": "现在有“主机”模型的“当前字符集”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“当前字符集”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“当前字符集”属性，类型是字符串，按视觉重量从低到高，可以有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n根据提供的 TypeScript 接口定义，输出标准的 JSON 格式内容如下：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "openstack_server_id",
    "propertyName": "OpenStack私有云虚拟机标识",
    "system": "现在有“主机”模型的“OpenStack私有云虚拟机标识”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“OpenStack私有云虚拟机标识”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“OpenStack私有云虚拟机标识”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "host_price",
    "propertyName": "主机价格",
    "system": "现在有“主机”模型的“主机价格”属性，类型是浮点型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“主机价格”属性，类型是浮点型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“主机价格”属性，类型是浮点型，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示，使用货币格式化；\n2. 使用中等字号，根据区间取值挑选合适的颜色，使用货币格式化；\n3. 使用大号字号，次级文本颜色显示，使用货币格式化；\n4. 使用大号字号，根据区间取值挑选合适的颜色，使用货币格式化。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"float\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"number\",\n      \"format\": \"currency\",\n      \"currency\": \"CNY\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"float\",\n    \"style\": {\n      \"size\": \"medium\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 100,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 101,\n        \"end\": 500,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 501,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ],\n    \"formatter\": {\n      \"type\": \"number\",\n      \"format\": \"currency\",\n      \"currency\": \"CNY\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"float\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"number\",\n      \"format\": \"currency\",\n      \"currency\": \"CNY\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"float\",\n    \"style\": {\n      \"size\": \"large\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 100,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 101,\n        \"end\": 500,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 501,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ],\n    \"formatter\": {\n      \"type\": \"number\",\n      \"format\": \"currency\",\n      \"currency\": \"CNY\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "float",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "number",
          "format": "currency",
          "currency": "CNY"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "float",
        "style": {
          "size": "medium"
        },
        "ranges": [
          {
            "end": 100,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 101,
            "end": 500,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 501,
            "style": {
              "color": "red"
            }
          }
        ],
        "formatter": {
          "type": "number",
          "format": "currency",
          "currency": "CNY"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "float",
        "style": {
          "size": "large",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "number",
          "format": "currency",
          "currency": "CNY"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "float",
        "style": {
          "size": "large"
        },
        "ranges": [
          {
            "end": 100,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 101,
            "end": 500,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 501,
            "style": {
              "color": "red"
            }
          }
        ],
        "formatter": {
          "type": "number",
          "format": "currency",
          "currency": "CNY"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "outer_ip",
    "propertyName": "外网ip",
    "system": "现在有“主机”模型的“外网ip”属性，类型是ip。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“外网ip”属性，类型是ip。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“外网ip”属性，类型是ip，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"ip\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"ip\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"ip\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"ip\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "ip",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "ip",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "ip",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "ip",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "ip",
    "propertyName": "IP",
    "system": "现在有“主机”模型的“IP”属性，类型是ip。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“IP”属性，类型是ip。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“IP”属性，类型是 IP 地址，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```\n\n但是，考虑到 IP 地址的特殊性，我们也可以将其视为一种特殊的字符串类型，因此，我们可以直接使用上述的 JSON 结果。然而，如果 IP 地址需要特殊处理，例如使用特定的格式化方式，我们可以将类型定义为 \"ip\" 并添加相应的格式化设置。但是，由于当前的接口定义中没有 \"ip\" 类型，我们可以暂时将其视为 \"string\" 类型处理。\n\n如果需要对 IP 地址进行特殊格式化，例如显示为 IPv4 或 IPv6 的特定格式，我们可以在 \"formatter\" 字段中添加相应的设置。但是，当前的接口定义中没有针对 IP 地址的格式化类型，因此，我们暂时不添加格式化设置。\n\n最终的 JSON 结果如下：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "cpu",
    "propertyName": "CPU信息",
    "system": "现在有“主机”模型的“CPU信息”属性，类型是结构体。该结构体定义的字段有：型号（brand）、架构（architecture）、物理颗粒数（cpu_pieces）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“CPU信息”属性，类型是结构体。该结构体定义的字段有：型号（brand）、架构（architecture）、物理颗粒数（cpu_pieces）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct\",\n    \"content\": \"<% DATA.brand %>\"\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct\",\n    \"content\": \"<% `${DATA.brand} (${DATA.architecture})` %>\"\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"detail\",\n    \"type\": \"struct\",\n    \"fields\": [\n      {\n        \"title\": \"型号\",\n        \"dataIndex\": \"brand\"\n      },\n      {\n        \"title\": \"架构\",\n        \"dataIndex\": \"architecture\"\n      },\n      {\n        \"title\": \"物理颗粒数\",\n        \"dataIndex\": \"cpu_pieces\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct\",\n    \"keys\": {\n      \"title\": \"brand\",\n      \"description\": \"architecture\"\n    },\n    \"maxItems\": 1\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct",
        "content": "<% DATA.brand %>"
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct",
        "content": "<% `${DATA.brand} (${DATA.architecture})` %>"
      },
      {
        "visualWeight": 1,
        "display": "detail",
        "type": "struct",
        "fields": [
          {
            "title": "型号",
            "dataIndex": "brand"
          },
          {
            "title": "架构",
            "dataIndex": "architecture"
          },
          {
            "title": "物理颗粒数",
            "dataIndex": "cpu_pieces"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct",
        "keys": {
          "title": "brand",
          "description": "architecture"
        },
        "maxItems": 1
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "cpuHz",
    "propertyName": "CPU频率",
    "system": "现在有“主机”模型的“CPU频率”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“CPU频率”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“CPU频率”属性，类型是整型，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，根据区间取值挑选合适的颜色；\n3. 使用大号字号，默认颜色文本显示；\n4. 使用大号字号，根据区间取值挑选合适的颜色；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 1000,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 1001,\n        \"end\": 2000,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 2001,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 1000,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 1001,\n        \"end\": 2000,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 2001,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ]\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium"
        },
        "ranges": [
          {
            "end": 1000,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 1001,
            "end": 2000,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 2001,
            "style": {
              "color": "red"
            }
          }
        ]
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large"
        },
        "ranges": [
          {
            "end": 1000,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 1001,
            "end": 2000,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 2001,
            "style": {
              "color": "red"
            }
          }
        ]
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "cpus",
    "propertyName": "总物理核心数",
    "system": "现在有“主机”模型的“总物理核心数”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“总物理核心数”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“总物理核心数”属性，类型是整型，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "cpuNumber",
    "propertyName": "总逻辑核心数",
    "system": "现在有“主机”模型的“总逻辑核心数”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“总逻辑核心数”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“总逻辑核心数”属性，类型是整型，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用大号字号，默认颜色文本显示；\n4. 使用大号字号，字重加粗，默认颜色文本显示；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "diskTotal",
    "propertyName": "磁盘容量",
    "system": "现在有“主机”模型的“磁盘容量”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“磁盘容量”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“磁盘容量”属性，类型是字符串，但通常磁盘容量会以数值和单位的形式表示，例如“100GB”。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "disk",
    "propertyName": "磁盘信息",
    "system": "现在有“主机”模型的“磁盘信息”属性，类型是结构体列表。该结构体定义的字段有：磁盘（device）、文件系统类型（fstype）、挂载点（mountpoint）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“磁盘信息”属性，类型是结构体列表。该结构体定义的字段有：磁盘（device）、文件系统类型（fstype）、挂载点（mountpoint）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.device} (${ITEM.fstype})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.device} (${ITEM.fstype}) - ${ITEM.mountpoint}` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"磁盘\",\n        \"dataIndex\": \"device\"\n      },\n      {\n        \"title\": \"文件系统类型\",\n        \"dataIndex\": \"fstype\"\n      },\n      {\n        \"title\": \"挂载点\",\n        \"dataIndex\": \"mountpoint\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"device\",\n      \"description\": \"mountpoint\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.device} (${ITEM.fstype})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.device} (${ITEM.fstype}) - ${ITEM.mountpoint}` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "磁盘",
            "dataIndex": "device"
          },
          {
            "title": "文件系统类型",
            "dataIndex": "fstype"
          },
          {
            "title": "挂载点",
            "dataIndex": "mountpoint"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "device",
          "description": "mountpoint"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "diskSize",
    "propertyName": "磁盘大小",
    "system": "现在有“主机”模型的“磁盘大小”属性，类型是整型，原始单位 KiB。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“磁盘大小”属性，类型是整型，原始单位 KiB。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“磁盘大小”属性，类型是整型，原始单位 KiB，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色，使用数字单位格式化；\n2. 使用中等字号，根据区间取值挑选合适的颜色，使用数字单位格式化；\n3. 使用大号字号，根据区间取值挑选合适的颜色，使用数字单位格式化；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"number\",\n      \"format\": \"unit\",\n      \"originalUnit\": \"KiB\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 100000,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 100001,\n        \"end\": 500000,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 500001,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ],\n    \"formatter\": {\n      \"type\": \"number\",\n      \"format\": \"unit\",\n      \"originalUnit\": \"KiB\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 100000,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 100001,\n        \"end\": 500000,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 500001,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ],\n    \"formatter\": {\n      \"type\": \"number\",\n      \"format\": \"unit\",\n      \"originalUnit\": \"KiB\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "number",
          "format": "unit",
          "originalUnit": "KiB"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium"
        },
        "ranges": [
          {
            "end": 100000,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 100001,
            "end": 500000,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 500001,
            "style": {
              "color": "red"
            }
          }
        ],
        "formatter": {
          "type": "number",
          "format": "unit",
          "originalUnit": "KiB"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large"
        },
        "ranges": [
          {
            "end": 100000,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 100001,
            "end": 500000,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 500001,
            "style": {
              "color": "red"
            }
          }
        ],
        "formatter": {
          "type": "number",
          "format": "unit",
          "originalUnit": "KiB"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "memSize",
    "propertyName": "内存大小",
    "system": "现在有“主机”模型的“内存大小”属性，类型是整型，原始单位 KiB。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“内存大小”属性，类型是整型，原始单位 KiB。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“内存大小”属性，类型是整型，原始单位 KiB，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示，使用数字单位格式化；\n2. 使用中等字号，默认颜色文本显示，使用数字单位格式化；\n3. 使用中等字号，根据数值大小挑选合适的颜色，使用数字单位格式化；\n4. 使用大号字号，默认颜色文本显示，使用数字单位格式化。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"number\",\n      \"format\": \"unit\",\n      \"originalUnit\": \"KiB\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"number\",\n      \"format\": \"unit\",\n      \"originalUnit\": \"KiB\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 1024,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 1025,\n        \"end\": 8192,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 8193,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ],\n    \"formatter\": {\n      \"type\": \"number\",\n      \"format\": \"unit\",\n      \"originalUnit\": \"KiB\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"number\",\n      \"format\": \"unit\",\n      \"originalUnit\": \"KiB\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "number",
          "format": "unit",
          "originalUnit": "KiB"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "number",
          "format": "unit",
          "originalUnit": "KiB"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "ranges": [
          {
            "end": 1024,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 1025,
            "end": 8192,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 8193,
            "style": {
              "color": "red"
            }
          }
        ],
        "formatter": {
          "type": "number",
          "format": "unit",
          "originalUnit": "KiB"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "number",
          "format": "unit",
          "originalUnit": "KiB"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "_occupiedU",
    "propertyName": "占用U数",
    "system": "现在有“主机”模型的“占用U数”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“占用U数”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“占用U数”属性，类型是整型，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，根据区间取值挑选合适的颜色；\n3. 使用大号字号，默认颜色文本显示；\n4. 使用大号字号，根据区间取值挑选合适的颜色；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 10,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 11,\n        \"end\": 20,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 21,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 10,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 11,\n        \"end\": 20,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 21,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ]\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium"
        },
        "ranges": [
          {
            "end": 10,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 11,
            "end": 20,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 21,
            "style": {
              "color": "red"
            }
          }
        ]
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large"
        },
        "ranges": [
          {
            "end": 10,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 11,
            "end": 20,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 21,
            "style": {
              "color": "red"
            }
          }
        ]
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "_startU",
    "propertyName": "起始U位",
    "system": "现在有“主机”模型的“起始U位”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“起始U位”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“起始U位”属性，类型是整型，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "_environment",
    "propertyName": "主机环境",
    "system": "现在有“主机”模型的“主机环境”属性，类型是枚举：无、开发、测试、预发布、生产、灾备。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“主机环境”属性，类型是枚举：无、开发、测试、预发布、生产、灾备。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "根据“主机环境”属性的类型和业务性质，我们可以设计以下几种显示方案：\n\n1. 使用标签形式，中等尺寸，灰色背景；\n2. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n3. 使用标签形式，大尺寸，根据状态值从色板中挑选合适的颜色；\n4. 使用标签形式，大尺寸，带有边框，根据状态值从色板中挑选合适的颜色和边框颜色。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"无\": \"gray\",\n        \"开发\": \"blue\",\n        \"测试\": \"cyan\",\n        \"预发布\": \"geekblue\",\n        \"生产\": \"green\",\n        \"灾备\": \"orange\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"无\": \"gray\",\n        \"开发\": \"blue\",\n        \"测试\": \"cyan\",\n        \"预发布\": \"geekblue\",\n        \"生产\": \"green\",\n        \"灾备\": \"orange\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"border\": \"1px solid\",\n      \"palette\": {\n        \"无\": \"gray\",\n        \"开发\": \"blue\",\n        \"测试\": \"cyan\",\n        \"预发布\": \"geekblue\",\n        \"生产\": \"green\",\n        \"灾备\": \"orange\"\n      },\n      \"borderPalette\": {\n        \"无\": \"gray\",\n        \"开发\": \"blue\",\n        \"测试\": \"cyan\",\n        \"预发布\": \"geekblue\",\n        \"生产\": \"green\",\n        \"灾备\": \"orange\"\n      }\n    }\n  }\n]\n```\n\n但是，根据给定的接口定义，`border` 和 `borderPalette` 并没有在 `Style` 接口中定义，因此，我们只能使用前三种方案，而第四种方案需要调整为不包含边框的方案。最终的 JSON 输出应该是：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"无\": \"gray\",\n        \"开发\": \"blue\",\n        \"测试\": \"cyan\",\n        \"预发布\": \"geekblue\",\n        \"生产\": \"green\",\n        \"灾备\": \"orange\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"无\": \"gray\",\n        \"开发\": \"blue\",\n        \"测试\": \"cyan\",\n        \"预发布\": \"geekblue\",\n        \"生产\": \"green\",\n        \"灾备\": \"orange\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "无": "gray",
            "开发": "blue",
            "测试": "cyan",
            "预发布": "geekblue",
            "生产": "green",
            "灾备": "orange"
          }
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "无": "gray",
            "开发": "blue",
            "测试": "cyan",
            "预发布": "geekblue",
            "生产": "green",
            "灾备": "orange"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "border": "1px solid",
          "palette": {
            "无": "gray",
            "开发": "blue",
            "测试": "cyan",
            "预发布": "geekblue",
            "生产": "green",
            "灾备": "orange"
          },
          "borderPalette": {
            "无": "gray",
            "开发": "blue",
            "测试": "cyan",
            "预发布": "geekblue",
            "生产": "green",
            "灾备": "orange"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "asset_belong_to",
    "propertyName": "资产主体",
    "system": "现在有“主机”模型的“资产主体”属性，类型是枚举：鞋类、体育、鞋体公用、物流、新业务、公共、意礴。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“资产主体”属性，类型是枚举：鞋类、体育、鞋体公用、物流、新业务、公共、意礴。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“资产主体”属性，类型是枚举，按视觉重量从低到高，可以有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用标签形式，中等尺寸，灰色背景；\n3. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n4. 使用标签形式，大尺寸，根据状态值从色板中挑选合适的颜色。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"鞋类\": \"red\",\n        \"体育\": \"orange\",\n        \"鞋体公用\": \"yellow\",\n        \"物流\": \"green\",\n        \"新业务\": \"cyan\",\n        \"公共\": \"blue\",\n        \"意礴\": \"purple\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"鞋类\": \"red\",\n        \"体育\": \"orange\",\n        \"鞋体公用\": \"yellow\",\n        \"物流\": \"green\",\n        \"新业务\": \"cyan\",\n        \"公共\": \"blue\",\n        \"意礴\": \"purple\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "enum",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "鞋类": "red",
            "体育": "orange",
            "鞋体公用": "yellow",
            "物流": "green",
            "新业务": "cyan",
            "公共": "blue",
            "意礴": "purple"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "鞋类": "red",
            "体育": "orange",
            "鞋体公用": "yellow",
            "物流": "green",
            "新业务": "cyan",
            "公共": "blue",
            "意礴": "purple"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "applicant",
    "propertyName": "申请人",
    "system": "现在有“主机”模型的“申请人”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“申请人”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“申请人”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "maintenance_time_start",
    "propertyName": "维保开始时间",
    "system": "现在有“主机”模型的“维保开始时间”属性，类型是日期。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“维保开始时间”属性，类型是日期。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“维保开始时间”属性，类型是日期，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示，使用相对时间格式；\n2. 使用中等字号，默认颜色文本显示，使用相对时间格式；\n3. 使用中等字号，默认颜色文本显示，使用精确时间格式；\n4. 使用大号字号，默认颜色文本显示，使用精确时间格式。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "date",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "propertyid",
    "propertyName": "资产编号",
    "system": "现在有“主机”模型的“资产编号”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“资产编号”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“资产编号”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "asset_id",
    "propertyName": "固资编号",
    "system": "现在有“主机”模型的“固资编号”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“固资编号”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“固资编号”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "maintenance_time_end",
    "propertyName": "维保结束时间",
    "system": "现在有“主机”模型的“维保结束时间”属性，类型是日期。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“维保结束时间”属性，类型是日期。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“维保结束时间”属性，类型是日期，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示相对时间；\n2. 使用中等字号，默认颜色文本显示相对时间；\n3. 使用中等字号，默认颜色文本显示精确时间；\n4. 使用大号字号，默认颜色文本显示精确时间。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"date\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "date",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "date",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "maintenanceExpireYearsNumber",
    "propertyName": "已使用年数",
    "system": "现在有“主机”模型的“已使用年数”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“已使用年数”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“已使用年数”属性，类型是整型，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，根据区间取值挑选合适的颜色；\n3. 使用大号字号，默认颜色文本显示；\n4. 使用大号字号，根据区间取值挑选合适的颜色；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 3,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 4,\n        \"end\": 7,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 8,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\"\n    },\n    \"ranges\": [\n      {\n        \"end\": 3,\n        \"style\": {\n          \"color\": \"green\"\n        }\n      },\n      {\n        \"start\": 4,\n        \"end\": 7,\n        \"style\": {\n          \"color\": \"orange\"\n        }\n      },\n      {\n        \"start\": 8,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ]\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium"
        },
        "ranges": [
          {
            "end": 3,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 4,
            "end": 7,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 8,
            "style": {
              "color": "red"
            }
          }
        ]
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large"
        },
        "ranges": [
          {
            "end": 3,
            "style": {
              "color": "green"
            }
          },
          {
            "start": 4,
            "end": 7,
            "style": {
              "color": "orange"
            }
          },
          {
            "start": 8,
            "style": {
              "color": "red"
            }
          }
        ]
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "maintenanceState",
    "propertyName": "维保状态",
    "system": "现在有“主机”模型的“维保状态”属性，类型是枚举：未配置、已到期、维保中。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“维保状态”属性，类型是枚举：未配置、已到期、维保中。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "根据“主机”模型的“维保状态”属性，类型是枚举：未配置、已到期、维保中，按视觉重量从低到高，以下是2-5种候选显示方案的JSON输出：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"未配置\": \"gray\",\n        \"已到期\": \"red\",\n        \"维保中\": \"green\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"未配置\": \"gray\",\n        \"已到期\": \"red\",\n        \"维保中\": \"green\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"x-large\",\n      \"palette\": {\n        \"未配置\": \"gray\",\n        \"已到期\": \"red\",\n        \"维保中\": \"green\"\n      }\n    }\n  }\n]\n```\n\n这里，我们使用了标签（tag）作为显示形式，因为维保状态是一个枚举类型，适合用标签来表示。从视觉重量-1开始，使用中等尺寸的灰色背景标签，到视觉重量2，使用超大尺寸的标签，同时根据状态值使用不同的颜色。",
    "json": [
      {
        "visualWeight": -1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "未配置": "gray",
            "已到期": "red",
            "维保中": "green"
          }
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "未配置": "gray",
            "已到期": "red",
            "维保中": "green"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "x-large",
          "palette": {
            "未配置": "gray",
            "已到期": "red",
            "维保中": "green"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "age",
    "propertyName": "启动时间",
    "system": "现在有“主机”模型的“启动时间”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“启动时间”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“启动时间”属性，类型是字符串，但考虑到其内容是时间，我们应将其视为日期时间类型。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示，使用相对时间格式；\n2. 使用中等字号，默认颜色文本显示，使用相对时间格式；\n3. 使用中等字号，字重加粗，默认颜色文本显示，使用准确时间格式；\n4. 使用大号字号，默认颜色文本显示，使用准确时间格式。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"accurate\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "accurate"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "annotations",
    "propertyName": "注解",
    "system": "现在有“主机”模型的“注解”属性，类型是结构体列表。该结构体定义的字段有：注解键（key）、注解值（value）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“注解”属性，类型是结构体列表。该结构体定义的字段有：注解键（key）、注解值（value）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "根据“主机”模型的“注解”属性，类型是结构体列表，且结构体定义的字段有：注解键（key）、注解值（value），按视觉重量从低到高，给出以下几种候选显示方案：\n\n1. 显示前两项注解的键（key）及总数；\n2. 显示前两项注解的键（key）和值（value）及总数；\n3. 使用表格列出注解列表；\n4. 使用卡片列表列出注解列表。\n\n转换为标准 JSON 格式内容如下：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% ITEM.key %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.key}: ${ITEM.value}` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"注解键\",\n        \"dataIndex\": \"key\"\n      },\n      {\n        \"title\": \"注解值\",\n        \"dataIndex\": \"value\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"key\",\n      \"description\": \"value\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% ITEM.key %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.key}: ${ITEM.value}` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "注解键",
            "dataIndex": "key"
          },
          {
            "title": "注解值",
            "dataIndex": "value"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "key",
          "description": "value"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "appServicePort",
    "propertyName": "应用服务端口监控",
    "system": "现在有“主机”模型的“应用服务端口监控”属性，类型是字符串，多个端口用,分隔。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“应用服务端口监控”属性，类型是字符串，多个端口用,分隔。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“应用服务端口监控”属性，类型是字符串，多个端口用,分隔。按视觉重量从低到高，可以有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示，端口之间用逗号分隔；\n2. 使用中等字号，默认颜色文本显示，端口之间用逗号分隔；\n3. 使用中等字号，字重加粗，默认颜色文本显示，端口之间用逗号分隔；\n4. 使用大号字号，默认颜色文本显示，端口之间用逗号分隔；\n\n由于该属性是多个端口的列表，虽然类型上是字符串，但实际显示时可以考虑使用列表的显示方式，以增强可读性。因此，第4种方案可以进一步优化为使用大号字号，默认颜色文本显示，每个端口独立显示，使用换行分隔。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"content\": \"<% DATA.split(',').join(', ') %>\"\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"content\": \"<% DATA.split(',').join(', ') %>\"\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"content\": \"<% DATA.split(',').join(', ') %>\"\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"content\": \"<% DATA.split(',').map(port => `${port}`).join('\\n') %>\"\n  }\n]\n```\n\n但考虑到字符串类型不能直接使用 `split` 方法，我们需要将表达式中的 `DATA` 视为原始字符串，因此实际的表达式应该使用正则表达式来分割字符串，以适应字符串类型的数据。修正后的 JSON 输出如下：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"content\": \"<% DATA.replace(/,/g, ', ') %>\"\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"content\": \"<% DATA.replace(/,/g, ', ') %>\"\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"content\": \"<% DATA.replace(/,/g, ', ') %>\"\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"content\": \"<% DATA.split(',').map(port => `${port}`).join('\\n') %>\"\n  }\n]\n```\n\n然而，由于字符串类型在表达式中没有 `split` 方法，我们不能直接使用 `split` 方法。因此，第4种方案的表达式需要进一步修正，以适应字符串类型的数据。修正后的 JSON 输出如下：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"content\": \"<% DATA.replace(/,/g, ', ') %>\"\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"content\": \"<% DATA.replace(/,/g, ', ') %>\"\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"content\": \"<% DATA.replace(/,/g, ', ') %>\"\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"content\": \"<% DATA.split(/,/).join('\\n') %>\"\n  }\n]\n```\n\n在最终的修正中，我们使用正则表达式 `/,/` 来匹配逗号，并使用 `split` 方法来分割字符串，然后使用换行符 `\\n` 来连接分割后的字符串，以实现每个端口独立显示的效果。",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "content": "<% DATA.split(',').join(', ') %>"
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "content": "<% DATA.split(',').join(', ') %>"
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        },
        "content": "<% DATA.split(',').join(', ') %>"
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        },
        "content": "<% DATA.split(',').map(port => `${port}`).join('\n') %>"
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "filesystem",
    "propertyName": "文件系统",
    "system": "现在有“主机”模型的“文件系统”属性，类型是结构体列表。该结构体定义的字段有：文件系统名称（filesystem）、容量（size）、挂载路径（mountPoint）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“文件系统”属性，类型是结构体列表。该结构体定义的字段有：文件系统名称（filesystem）、容量（size）、挂载路径（mountPoint）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.filesystem} (${ITEM.mountPoint})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.filesystem} (${ITEM.mountPoint}), 容量: ${ITEM.size} KiB` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"文件系统名称\",\n        \"dataIndex\": \"filesystem\"\n      },\n      {\n        \"title\": \"挂载路径\",\n        \"dataIndex\": \"mountPoint\"\n      },\n      {\n        \"title\": \"容量\",\n        \"dataIndex\": \"size\",\n        \"formatter\": {\n          \"type\": \"number\",\n          \"format\": \"unit\",\n          \"originalUnit\": \"KiB\"\n        }\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"filesystem\",\n      \"description\": \"mountPoint\"\n    },\n    \"formatter\": {\n      \"type\": \"number\",\n      \"format\": \"unit\",\n      \"originalUnit\": \"KiB\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.filesystem} (${ITEM.mountPoint})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.filesystem} (${ITEM.mountPoint}), 容量: ${ITEM.size} KiB` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "文件系统名称",
            "dataIndex": "filesystem"
          },
          {
            "title": "挂载路径",
            "dataIndex": "mountPoint"
          },
          {
            "title": "容量",
            "dataIndex": "size",
            "formatter": {
              "type": "number",
              "format": "unit",
              "originalUnit": "KiB"
            }
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "filesystem",
          "description": "mountPoint"
        },
        "formatter": {
          "type": "number",
          "format": "unit",
          "originalUnit": "KiB"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "hardDevices",
    "propertyName": "硬盘信息",
    "system": "现在有“主机”模型的“硬盘信息”属性，类型是结构体列表。该结构体定义的字段有：名称（name）、设备类型（type）、主设备号（major）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“硬盘信息”属性，类型是结构体列表。该结构体定义的字段有：名称（name）、设备类型（type）、主设备号（major）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.name} (${ITEM.type})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.name} (${ITEM.type}), 主设备号: ${ITEM.major}` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"名称\",\n        \"dataIndex\": \"name\"\n      },\n      {\n        \"title\": \"设备类型\",\n        \"dataIndex\": \"type\"\n      },\n      {\n        \"title\": \"主设备号\",\n        \"dataIndex\": \"major\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"name\",\n      \"description\": \"type\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.name} (${ITEM.type})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.name} (${ITEM.type}), 主设备号: ${ITEM.major}` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "名称",
            "dataIndex": "name"
          },
          {
            "title": "设备类型",
            "dataIndex": "type"
          },
          {
            "title": "主设备号",
            "dataIndex": "major"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "name",
          "description": "type"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "iptables",
    "propertyName": "iptables",
    "system": "现在有“主机”模型的“iptables”属性，类型是结构体列表。该结构体定义的字段有：是否IPv6协议（isIPv6）、链路（chain）、授权策略（target）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“iptables”属性，类型是结构体列表。该结构体定义的字段有：是否IPv6协议（isIPv6）、链路（chain）、授权策略（target）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "根据“主机”模型的“iptables”属性，类型是结构体列表，且结构体定义的字段有：是否IPv6协议（isIPv6）、链路（chain）、授权策略（target）。按视觉重量从低到高，给出2-5种候选显示方案的JSON格式如下：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.chain} (${ITEM.target})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.chain} (${ITEM.target})` %>\",\n    \"maxItems\": 5\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"链路\",\n        \"dataIndex\": \"chain\"\n      },\n      {\n        \"title\": \"授权策略\",\n        \"dataIndex\": \"target\"\n      },\n      {\n        \"title\": \"IPv6协议\",\n        \"dataIndex\": \"isIPv6\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"chain\",\n      \"description\": \"target\"\n    }\n  }\n]\n```\n\n这里，我们假设 `isIPv6` 字段是一个布尔值，直接在表格中显示，而在卡片列表中，我们没有直接显示 `isIPv6` 字段，因为卡片列表通常用于展示更直观的信息，布尔值可能不适合直接作为卡片描述。如果需要，可以将 `isIPv6` 字段的显示逻辑加入到卡片描述的表达式中，例如使用 `<% `${ITEM.chain} (${ITEM.target}) ${ITEM.isIPv6 ? '(IPv6)' : ''}` %>`。但是，这将增加卡片描述的复杂度，可能影响阅读体验，因此在默认情况下，我们没有将 `isIPv6` 字段直接包含在卡片描述中。",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.chain} (${ITEM.target})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.chain} (${ITEM.target})` %>",
        "maxItems": 5
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "链路",
            "dataIndex": "chain"
          },
          {
            "title": "授权策略",
            "dataIndex": "target"
          },
          {
            "title": "IPv6协议",
            "dataIndex": "isIPv6"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "chain",
          "description": "target"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "k8sProxyVersion",
    "propertyName": "Kube-Proxy版本",
    "system": "现在有“主机”模型的“Kube-Proxy版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“Kube-Proxy版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "根据“主机”模型的“Kube-Proxy版本”属性，类型是字符串，按视觉重量从低到高，以下为2-5种候选显示方案的JSON输出：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "k8sVersion",
    "propertyName": "k8s版本",
    "system": "现在有“主机”模型的“k8s版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“k8s版本”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“k8s版本”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "labels",
    "propertyName": "标签",
    "system": "现在有“主机”模型的“标签”属性，类型是结构体列表。该结构体定义的字段有：key（key）、values（values）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“标签”属性，类型是结构体列表。该结构体定义的字段有：key（key）、values（values）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“标签”属性，类型是结构体列表，其结构体定义的字段有：key（key）、values（values）。按视觉重量从低到高，可以有以下几种显示方案：\n\n1. 显示前两项标签的 key 和 values，以逗号分隔；\n2. 显示前两项标签的 key 和 values，以换行分隔；\n3. 使用表格列出标签列表；\n4. 使用卡片列表列出标签列表。\n\n转换为 JSON 格式输出如下：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.key}: ${ITEM.values.join(', ')}` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.key}: ${ITEM.values.join(', ')}` %>\",\n    \"maxItems\": 2,\n    \"style\": {\n      \"size\": \"medium\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"Key\",\n        \"dataIndex\": \"key\"\n      },\n      {\n        \"title\": \"Values\",\n        \"dataIndex\": \"values\",\n        \"formatter\": {\n          \"type\": \"text\",\n          \"content\": \"<% DATA.join(', ') %>\"\n        }\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"key\",\n      \"description\": \"values\"\n    },\n    \"formatter\": {\n      \"type\": \"text\",\n      \"content\": \"<% DATA.join(', ') %>\"\n    }\n  }\n]\n```\n\n请注意，对于“values”字段，由于它是数组类型，我们使用 `join(', ')` 方法将其转换为以逗号分隔的字符串。在卡片列表和表格中，我们使用了 `formatter` 来处理数组类型的数据。在卡片列表中，我们使用 `description` 字段来展示数组类型的数据。在表格中，我们同样使用 `formatter` 来处理数组类型的数据，但是我们使用了 `DATA` 来引用数据原始值，而不是 `ITEM`，因为表格的 `formatter` 不是针对列表项的。",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.key}: ${ITEM.values.join(', ')}` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.key}: ${ITEM.values.join(', ')}` %>",
        "maxItems": 2,
        "style": {
          "size": "medium"
        }
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "Key",
            "dataIndex": "key"
          },
          {
            "title": "Values",
            "dataIndex": "values",
            "formatter": {
              "type": "text",
              "content": "<% DATA.join(', ') %>"
            }
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "key",
          "description": "values"
        },
        "formatter": {
          "type": "text",
          "content": "<% DATA.join(', ') %>"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "nodeLabels",
    "propertyName": "k8s标签",
    "system": "现在有“主机”模型的“k8s标签”属性，类型是结构体列表。该结构体定义的字段有：标签键（key）、标签值（value）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“k8s标签”属性，类型是结构体列表。该结构体定义的字段有：标签键（key）、标签值（value）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.key}=${ITEM.value}` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.key}: ${ITEM.value}` %>\",\n    \"maxItems\": 5\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"标签键\",\n        \"dataIndex\": \"key\"\n      },\n      {\n        \"title\": \"标签值\",\n        \"dataIndex\": \"value\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"key\",\n      \"description\": \"value\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.key}=${ITEM.value}` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.key}: ${ITEM.value}` %>",
        "maxItems": 5
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "标签键",
            "dataIndex": "key"
          },
          {
            "title": "标签值",
            "dataIndex": "value"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "key",
          "description": "value"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "nodeName",
    "propertyName": "节点名称",
    "system": "现在有“主机”模型的“节点名称”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“节点名称”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“节点名称”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "nodeOriginalStatus",
    "propertyName": "k8s节点原始状态",
    "system": "现在有“主机”模型的“k8s节点原始状态”属性，类型是JSON。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“k8s节点原始状态”属性，类型是JSON。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“k8s节点原始状态”属性，类型是JSON，按视觉重量从低到高，有以下几种显示方案：\n\n1. 显示 JSON 的主要键名（例如前两个键名）；\n2. 显示 JSON 的主要键名和部分值（例如前两个键名及其值）；\n3. 使用表格列出 JSON 的键值对；\n4. 使用详情信息展示 JSON 的所有属性。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"json\",\n    \"content\": \"<% Object.keys(DATA).slice(0, 2).join(', ') %>\"\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"json\",\n    \"content\": \"<% `${Object.keys(DATA).slice(0, 2).map(key => `${key}: ${DATA[key]}`).join(', ')}` %>\"\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"json\",\n    \"columns\": [\n      {\n        \"title\": \"键名\",\n        \"dataIndex\": \"key\"\n      },\n      {\n        \"title\": \"值\",\n        \"dataIndex\": \"value\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"detail\",\n    \"type\": \"json\",\n    \"fields\":  [\n      {\n        \"title\": \"键名\",\n        \"dataIndex\": \"key\"\n      },\n      {\n        \"title\": \"值\",\n        \"dataIndex\": \"value\"\n      }\n    ]\n  }\n]\n```\n\n但是，由于 JSON 类型的特殊性，我们不能直接使用 `key` 和 `value` 作为 `dataIndex`，因为 JSON 是一个对象，没有直接的 `key` 和 `value` 属性。因此，我们需要对上述 JSON 的显示方案进行调整，以适应 JSON 类型的特性。\n\n对于 JSON 类型的显示方案，我们可以使用以下方式：\n\n1. 显示 JSON 的前两个键名；\n2. 显示 JSON 的前两个键名及其值；\n3. 使用表格列出 JSON 的键值对；\n4. 使用详情信息展示 JSON 的所有属性。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"json\",\n    \"content\": \"<% Object.keys(DATA).slice(0, 2).join(', ') %>\"\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"json\",\n    \"content\": \"<% `${Object.keys(DATA).slice(0, 2).map(key => `${key}: ${DATA[key]}`).join(', ')}` %>\"\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"json\",\n    \"columns\": [\n      {\n        \"title\": \"键名\",\n        \"dataIndex\": \"key\",\n        \"formatter\": {\n          \"type\": \"function\",\n          \"function\": \"(data) => Object.keys(data)\"\n        }\n      },\n      {\n        \"title\": \"值\",\n        \"dataIndex\": \"value\",\n        \"formatter\": {\n          \"type\": \"function\",\n          \"function\": \"(data, key) => data[key]\"\n        }\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"detail\",\n    \"type\": \"json\",\n    \"fields\":  [\n      {\n        \"title\": \"键名\",\n        \"dataIndex\": \"key\",\n        \"formatter\": {\n          \"type\": \"function\",\n          \"function\": \"(data) => Object.keys(data)\"\n        }\n      },\n      {\n        \"title\": \"值\",\n        \"dataIndex\": \"value\",\n        \"formatter\": {\n          \"type\": \"function\",\n          \"function\": \"(data, key) => data[key]\"\n        }\n      }\n    ]\n  }\n]\n```\n\n但是，由于 `dataIndex` 和 `formatter` 的设计，我们不能直接使用 `key` 和 `value` 作为 `dataIndex`，因此，我们需要对上述 JSON 的显示方案进行调整，以适应 JSON 类型的特性。\n\n对于 JSON 类型的显示方案，我们可以使用以下方式：\n\n1. 显示 JSON 的前两个键名；\n2. 显示 JSON 的前两个键名及其值；\n3. 使用表格列出 JSON 的键值对，其中键名和值需要通过函数获取；\n4. 使用详情信息展示 JSON 的所有属性，其中键名和值需要通过函数获取。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"json\",\n    \"content\": \"<% Object.keys(DATA).slice(0, 2).join(', ') %>\"\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"json\",\n    \"content\": \"<% `${Object.keys(DATA).slice(0, 2).map(key => `${key}: ${DATA[key]}`).join(', ')}` %>\"\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"json\",\n    \"columns\": [\n      {\n        \"title\": \"键名\",\n        \"formatter\": {\n          \"type\": \"function\",\n          \"function\": \"(data) => Object.keys(data).slice(0, 2)\"\n        }\n      },\n      {\n        \"title\": \"值\",\n        \"formatter\": {\n          \"type\": \"function\",\n          \"function\": \"(data, key) => data[key]\"\n        }\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"detail\",\n    \"type\": \"json\",\n    \"fields\":  [\n      {\n        \"title\": \"键名\",\n        \"formatter\": {\n          \"type\": \"function\",\n          \"function\": \"(data) => Object.keys(data)\"\n        }\n      },\n      {\n        \"title\": \"值\",\n        \"formatter\": {\n          \"type\": \"function\",\n          \"function\": \"(data, key) => data[key]\"\n        }\n      }\n    ]\n  }\n]\n```\n\n但是，由于 `formatter` 的设计，我们不能直接使用 `key` 和 `value` 作为 `dataIndex`，因此，我们需要对上述 JSON 的显示方案进行调整，以适应 JSON 类型的特性。\n\n对于 JSON 类型的显示方案，我们可以使用以下方式：\n\n1. 显示 JSON 的前两个键名；\n2. 显示 JSON 的前两个键名及其值；\n3. 使用表格列出 JSON 的键值对，其中键名和值需要通过函数获取；\n4. 使用详情信息展示 JSON 的所有属性，其中键名和值需要通过函数获取。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"json\",\n    \"content\": \"<% Object.keys(DATA).slice(0, 2).join(', ') %>\"\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"json\",\n    \"content\": \"<% `${Object.keys(DATA).slice(0, 2).map(key => `${key}: ${DATA[key]}`).join(', ')}` %>\"\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"json\",\n    \"columns\": [\n      {\n        \"title\": \"键名\",\n        \"formatter\": {\n          \"type\": \"function\",\n          \"function\": \"(data) => Object.keys(data).slice(0, 2)\"\n        }\n      },\n      {\n        \"title\": \"值\",\n        \"formatter\": {\n          \"type\": \"function\",\n          \"function\": \"(data, key) => data[key]\"\n        }\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"detail\",\n    \"type\": \"json\",\n    \"fields\":  [\n      {\n        \"title\": \"键名\",\n        \"formatter\": {\n          \"type\": \"function\",\n          \"function\": \"(data) => Object.keys(data)\"\n        }\n      },\n      {\n        \"title\": \"值\",\n        \"formatter\": {\n          \"type\": \"function\",\n          \"function\": \"(data, key) => data[key]\"\n        }\n      }\n    ]\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "json",
        "content": "<% Object.keys(DATA).slice(0, 2).join(', ') %>"
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "json",
        "content": "<% `${Object.keys(DATA).slice(0, 2).map(key => `${key}: ${DATA[key]}`).join(', ')}` %>"
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "json",
        "columns": [
          {
            "title": "键名",
            "dataIndex": "key"
          },
          {
            "title": "值",
            "dataIndex": "value"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "detail",
        "type": "json",
        "fields": [
          {
            "title": "键名",
            "dataIndex": "key"
          },
          {
            "title": "值",
            "dataIndex": "value"
          }
        ]
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "nodeStatus",
    "propertyName": "k8s节点状态",
    "system": "现在有“主机”模型的“k8s节点状态”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“k8s节点状态”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“k8s节点状态”属性，类型是字符串，假设可能的状态值有：未就绪; 就绪; 未知。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"未就绪\": \"red\",\n        \"就绪\": \"green\",\n        \"未知\": \"gray\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "string",
        "style": {
          "size": "medium",
          "palette": {
            "未就绪": "red",
            "就绪": "green",
            "未知": "gray"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "taints",
    "propertyName": "污点",
    "system": "现在有“主机”模型的“污点”属性，类型是结构体列表。该结构体定义的字段有：键名（key）、键值（value）、效果（effect）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“污点”属性，类型是结构体列表。该结构体定义的字段有：键名（key）、键值（value）、效果（effect）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.key}=${ITEM.value}` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.key}=${ITEM.value} (${ITEM.effect})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"键名\",\n        \"dataIndex\": \"key\"\n      },\n      {\n        \"title\": \"键值\",\n        \"dataIndex\": \"value\"\n      },\n      {\n        \"title\": \"效果\",\n        \"dataIndex\": \"effect\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"key\",\n      \"description\": \"value\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.key}=${ITEM.value}` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.key}=${ITEM.value} (${ITEM.effect})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "键名",
            "dataIndex": "key"
          },
          {
            "title": "键值",
            "dataIndex": "value"
          },
          {
            "title": "效果",
            "dataIndex": "effect"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "key",
          "description": "value"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "windowsFirewallRules",
    "propertyName": "windows防火墙策略",
    "system": "现在有“主机”模型的“windows防火墙策略”属性，类型是结构体列表。该结构体定义的字段有：规则名称（name）、是否启用（enabled）、方向（direction）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“windows防火墙策略”属性，类型是结构体列表。该结构体定义的字段有：规则名称（name）、是否启用（enabled）、方向（direction）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.name} (${ITEM.direction})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.name} (${ITEM.direction}, enabled: ${ITEM.enabled})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"规则名称\",\n        \"dataIndex\": \"name\"\n      },\n      {\n        \"title\": \"方向\",\n        \"dataIndex\": \"direction\"\n      },\n      {\n        \"title\": \"是否启用\",\n        \"dataIndex\": \"enabled\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"name\",\n      \"description\": \"<% `${ITEM.direction}, enabled: ${ITEM.enabled}` %>\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.name} (${ITEM.direction})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.name} (${ITEM.direction}, enabled: ${ITEM.enabled})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "规则名称",
            "dataIndex": "name"
          },
          {
            "title": "方向",
            "dataIndex": "direction"
          },
          {
            "title": "是否启用",
            "dataIndex": "enabled"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "name",
          "description": "<% `${ITEM.direction}, enabled: ${ITEM.enabled}` %>"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "collectedDataStatus",
    "propertyName": "采集数据状态",
    "system": "现在有“主机”模型的“采集数据状态”属性，类型是枚举：normal、lost。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“采集数据状态”属性，类型是枚举：normal、lost。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "根据“主机”模型的“采集数据状态”属性，类型是枚举：normal、lost。按视觉重量从低到高，给出的候选显示方案如下：\n\n1. 使用标签形式，中等尺寸，灰色背景；\n2. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n3. 使用标签形式，大尺寸，根据状态值从色板中挑选合适的颜色；\n4. 使用标签形式，大尺寸，加粗字体，根据状态值从色板中挑选合适的颜色；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"normal\": \"green\",\n        \"lost\": \"red\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"normal\": \"green\",\n        \"lost\": \"red\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"fontWeight\": \"bold\",\n      \"palette\": {\n        \"normal\": \"green\",\n        \"lost\": \"red\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "normal": "green",
            "lost": "red"
          }
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "normal": "green",
            "lost": "red"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "fontWeight": "bold",
          "palette": {
            "normal": "green",
            "lost": "red"
          }
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "markedLostTs",
    "propertyName": "被标记为lost状态时间",
    "system": "现在有“主机”模型的“被标记为lost状态时间”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“被标记为lost状态时间”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“被标记为lost状态时间”属性，类型是整型，通常表示的是时间戳。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示，格式化为相对时间；\n2. 使用中等字号，默认颜色文本显示，格式化为相对时间；\n3. 使用中等字号，字重加粗，默认颜色文本显示，格式化为相对时间；\n4. 使用大号字号，默认颜色文本显示，格式化为相对时间；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    },\n    \"formatter\": {\n      \"type\": \"date-time\",\n      \"format\": \"relative\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        },
        "formatter": {
          "type": "date-time",
          "format": "relative"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "resourceId",
    "propertyName": "资源ID",
    "system": "现在有“主机”模型的“资源ID”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“资源ID”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“资源ID”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "HOST",
    "objectName": "主机",
    "propertyId": "resourceInstanceId",
    "propertyName": "资源实例ID",
    "system": "现在有“主机”模型的“资源实例ID”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "主机”模型的“资源实例ID”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“主机”模型的“资源实例ID”属性，类型是字符串，按视觉重量从低到高，可以有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n转换为标准 JSON 格式输出如下：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "name",
    "propertyName": "名称",
    "system": "现在有“应用”模型的“名称”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“名称”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“应用”模型的“名称”属性，类型是字符串，按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "appId",
    "propertyName": "应用ID",
    "system": "现在有“应用”模型的“应用ID”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“应用ID”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "memo",
    "propertyName": "备注",
    "system": "现在有“应用”模型的“备注”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“备注”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“应用”模型的“备注”属性，类型是字符串，按视觉重量从低到高，可以有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n\n由于“备注”属性通常为辅助说明性的内容，通常不需要使用大号字号的方案，因此这里只提供视觉重量为 -1、0 和 1 的方案。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "releaseAbbreviation",
    "propertyName": "发布单元缩写",
    "system": "现在有“应用”模型的“发布单元缩写”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“发布单元缩写”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "releaseDate",
    "propertyName": "发布窗口",
    "system": "现在有“应用”模型的“发布窗口”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“发布窗口”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "根据“应用”模型的“发布窗口”属性，类型是字符串，按视觉重量从低到高，以下为2-5种候选显示方案的JSON输出：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "releaseNum",
    "propertyName": "发布单元编号",
    "system": "现在有“应用”模型的“发布单元编号”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“发布单元编号”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "releaseTimes",
    "propertyName": "发布次数",
    "system": "现在有“应用”模型的“发布次数”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“发布次数”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“应用”模型的“发布次数”属性，类型是字符串，但通常发布次数应该是一个数值，这里我们按照字符串类型来处理。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，默认颜色文本显示；\n3. 使用中等字号，字重加粗，默认颜色文本显示；\n4. 使用大号字号，默认颜色文本显示。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "_hierarchy",
    "propertyName": "应用层级",
    "system": "现在有“应用”模型的“应用层级”属性，类型是枚举：接入上层、接入中层、接入下层、逻辑上层、逻辑中层、逻辑下层、数据上层、数据中层、数据下层。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“应用层级”属性，类型是枚举：接入上层、接入中层、接入下层、逻辑上层、逻辑中层、逻辑下层、数据上层、数据中层、数据下层。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"接入上层\": \"blue\",\n        \"接入中层\": \"cyan\",\n        \"接入下层\": \"geekblue\",\n        \"逻辑上层\": \"green\",\n        \"逻辑中层\": \"orange\",\n        \"逻辑下层\": \"purple\",\n        \"数据上层\": \"red\",\n        \"数据中层\": \"yellow\",\n        \"数据下层\": \"teal\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"接入上层\": \"blue\",\n        \"接入中层\": \"cyan\",\n        \"接入下层\": \"geekblue\",\n        \"逻辑上层\": \"green\",\n        \"逻辑中层\": \"orange\",\n        \"逻辑下层\": \"purple\",\n        \"数据上层\": \"red\",\n        \"数据中层\": \"yellow\",\n        \"数据下层\": \"teal\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"x-large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "接入上层": "blue",
            "接入中层": "cyan",
            "接入下层": "geekblue",
            "逻辑上层": "green",
            "逻辑中层": "orange",
            "逻辑下层": "purple",
            "数据上层": "red",
            "数据中层": "yellow",
            "数据下层": "teal"
          }
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "接入上层": "blue",
            "接入中层": "cyan",
            "接入下层": "geekblue",
            "逻辑上层": "green",
            "逻辑中层": "orange",
            "逻辑下层": "purple",
            "数据上层": "red",
            "数据中层": "yellow",
            "数据下层": "teal"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "enum",
        "style": {
          "size": "x-large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "_updatable",
    "propertyName": "可更新",
    "system": "现在有“应用”模型的“可更新”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“可更新”属性，类型是整型。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“应用”模型的“可更新”属性，类型是整型，通常表示的是可更新的版本数量。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用中等字号，次级文本颜色显示；\n2. 使用中等字号，根据数值显示不同的颜色（例如，有更新时显示红色）；\n3. 使用大号字号，根据数值显示不同的颜色；\n4. 使用标签形式，中等尺寸，根据数值显示不同的颜色；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\"\n    },\n    \"ranges\": [\n      {\n        \"start\": 1,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"large\"\n    },\n    \"ranges\": [\n      {\n        \"start\": 1,\n        \"style\": {\n          \"color\": \"red\"\n        }\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"integer\",\n    \"style\": {\n      \"size\": \"medium\"\n    },\n    \"ranges\": [\n      {\n        \"start\": 1,\n        \"style\": {\n          \"background\": \"red\"\n        }\n      }\n    ]\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "medium"
        },
        "ranges": [
          {
            "start": 1,
            "style": {
              "color": "red"
            }
          }
        ]
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "integer",
        "style": {
          "size": "large"
        },
        "ranges": [
          {
            "start": 1,
            "style": {
              "color": "red"
            }
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "integer",
        "style": {
          "size": "medium"
        },
        "ranges": [
          {
            "start": 1,
            "style": {
              "background": "red"
            }
          }
        ]
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "appStatus",
    "propertyName": "应用状态",
    "system": "现在有“应用”模型的“应用状态”属性，类型是枚举：运营中、已停用。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“应用状态”属性，类型是枚举：运营中、已停用。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“应用”模型的“应用状态”属性，类型是枚举：运营中、已停用。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用标签形式，中等尺寸，灰色背景；\n2. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n3. 使用标签形式，大尺寸，根据状态值从色板中挑选合适的颜色；\n4. 使用标签形式，大尺寸，加粗字体，根据状态值从色板中挑选合适的颜色；\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"运营中\": \"green\",\n        \"已停用\": \"red\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"运营中\": \"green\",\n        \"已停用\": \"red\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"fontWeight\": \"bold\",\n      \"palette\": {\n        \"运营中\": \"green\",\n        \"已停用\": \"red\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "运营中": "green",
            "已停用": "red"
          }
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "运营中": "green",
            "已停用": "red"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "fontWeight": "bold",
          "palette": {
            "运营中": "green",
            "已停用": "red"
          }
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "runningState",
    "propertyName": "运行状态",
    "system": "现在有“应用”模型的“运行状态”属性，类型是枚举：运行中、已下线、暂停中。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“运行状态”属性，类型是枚举：运行中、已下线、暂停中。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"运行中\": \"green\",\n        \"已下线\": \"gray\",\n        \"暂停中\": \"orange\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"运行中\": \"green\",\n        \"已下线\": \"gray\",\n        \"暂停中\": \"orange\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"icon\",\n    \"type\": \"enum\",\n    \"icon\": {\n      \"运行中\": \"play-circle\",\n      \"已下线\": \"close-circle\",\n      \"暂停中\": \"pause-circle\"\n    },\n    \"style\": {\n      \"size\": \"large\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "运行中": "green",
            "已下线": "gray",
            "暂停中": "orange"
          }
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "运行中": "green",
            "已下线": "gray",
            "暂停中": "orange"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "icon",
        "type": "enum",
        "icon": {
          "运行中": "play-circle",
          "已下线": "close-circle",
          "暂停中": "pause-circle"
        },
        "style": {
          "size": "large"
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "status",
    "propertyName": "状态",
    "system": "现在有“应用”模型的“状态”属性，类型是枚举：上线、下线。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“状态”属性，类型是枚举：上线、下线。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "对于“应用”模型的“状态”属性，类型是枚举：上线、下线。按视觉重量从低到高，有以下几种显示方案：\n\n1. 使用标签形式，中等尺寸，灰色背景；\n2. 使用标签形式，中等尺寸，根据状态值从色板中挑选合适的颜色；\n3. 使用标签形式，大尺寸，根据状态值从色板中挑选合适的颜色；\n4. 使用标签形式，大尺寸，加粗字体，根据状态值从色板中挑选合适的颜色。\n\n期望返回结果：\n\n```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"background\": \"gray\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"palette\": {\n        \"上线\": \"green\",\n        \"下线\": \"red\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"palette\": {\n        \"上线\": \"green\",\n        \"下线\": \"red\"\n      }\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"tag\",\n    \"type\": \"enum\",\n    \"style\": {\n      \"size\": \"large\",\n      \"fontWeight\": \"bold\",\n      \"palette\": {\n        \"上线\": \"green\",\n        \"下线\": \"red\"\n      }\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "background": "gray"
        }
      },
      {
        "visualWeight": 0,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "medium",
          "palette": {
            "上线": "green",
            "下线": "red"
          }
        }
      },
      {
        "visualWeight": 1,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "palette": {
            "上线": "green",
            "下线": "red"
          }
        }
      },
      {
        "visualWeight": 2,
        "display": "tag",
        "type": "enum",
        "style": {
          "size": "large",
          "fontWeight": "bold",
          "palette": {
            "上线": "green",
            "下线": "red"
          }
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "__pipeline",
    "propertyName": "流水线信息",
    "system": "现在有“应用”模型的“流水线信息”属性，类型是结构体列表。该结构体定义的字段有：名称（name）、分类（category）、流程Id（flowId）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“流水线信息”属性，类型是结构体列表。该结构体定义的字段有：名称（name）、分类（category）、流程Id（flowId）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.name} (${ITEM.category})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.name} (${ITEM.category})` %>\",\n    \"maxItems\": 5\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"名称\",\n        \"dataIndex\": \"name\"\n      },\n      {\n        \"title\": \"分类\",\n        \"dataIndex\": \"category\"\n      },\n      {\n        \"title\": \"流程Id\",\n        \"dataIndex\": \"flowId\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"name\",\n      \"description\": \"category\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.name} (${ITEM.category})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.name} (${ITEM.category})` %>",
        "maxItems": 5
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "名称",
            "dataIndex": "name"
          },
          {
            "title": "分类",
            "dataIndex": "category"
          },
          {
            "title": "流程Id",
            "dataIndex": "flowId"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "name",
          "description": "category"
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "_defaultDeployStrategy",
    "propertyName": "默认部署策略",
    "system": "现在有“应用”模型的“默认部署策略”属性，类型是结构体列表。该结构体定义的字段有：环境类型（clusterType）、策略ID（strategyId）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“默认部署策略”属性，类型是结构体列表。该结构体定义的字段有：环境类型（clusterType）、策略ID（strategyId）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.clusterType} (${ITEM.strategyId})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.clusterType} - 策略ID: ${ITEM.strategyId}` %>\",\n    \"maxItems\": 3\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"环境类型\",\n        \"dataIndex\": \"clusterType\"\n      },\n      {\n        \"title\": \"策略ID\",\n        \"dataIndex\": \"strategyId\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"clusterType\",\n      \"description\": \"strategyId\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.clusterType} (${ITEM.strategyId})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.clusterType} - 策略ID: ${ITEM.strategyId}` %>",
        "maxItems": 3
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "环境类型",
            "dataIndex": "clusterType"
          },
          {
            "title": "策略ID",
            "dataIndex": "strategyId"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "clusterType",
          "description": "strategyId"
        }
      }
    ]
  },
  {
    "objectId": "APP",
    "objectName": "应用",
    "propertyId": "_packageList",
    "propertyName": "包列表",
    "system": "现在有“应用”模型的“包列表”属性，类型是结构体列表。该结构体定义的字段有：包名称（name）、包ID（packageId）、安装路径（installPath）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "应用”模型的“包列表”属性，类型是结构体列表。该结构体定义的字段有：包名称（name）、包ID（packageId）、安装路径（installPath）。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.name} (${ITEM.packageId})` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"struct-list\",\n    \"content\": \"<% `${ITEM.name} (${ITEM.packageId}) at ${ITEM.installPath}` %>\",\n    \"maxItems\": 2\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"table\",\n    \"type\": \"struct-list\",\n    \"columns\": [\n      {\n        \"title\": \"包名称\",\n        \"dataIndex\": \"name\"\n      },\n      {\n        \"title\": \"包ID\",\n        \"dataIndex\": \"packageId\"\n      },\n      {\n        \"title\": \"安装路径\",\n        \"dataIndex\": \"installPath\"\n      }\n    ]\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"card-list\",\n    \"type\": \"struct-list\",\n    \"keys\": {\n      \"title\": \"name\",\n      \"description\": \"packageId\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.name} (${ITEM.packageId})` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "struct-list",
        "content": "<% `${ITEM.name} (${ITEM.packageId}) at ${ITEM.installPath}` %>",
        "maxItems": 2
      },
      {
        "visualWeight": 1,
        "display": "table",
        "type": "struct-list",
        "columns": [
          {
            "title": "包名称",
            "dataIndex": "name"
          },
          {
            "title": "包ID",
            "dataIndex": "packageId"
          },
          {
            "title": "安装路径",
            "dataIndex": "installPath"
          }
        ]
      },
      {
        "visualWeight": 2,
        "display": "card-list",
        "type": "struct-list",
        "keys": {
          "title": "name",
          "description": "packageId"
        }
      }
    ]
  },
  {
    "objectId": "SERVICE@ONEMODEL",
    "objectName": "服务",
    "propertyId": "label",
    "propertyName": "服务标识",
    "system": "现在有“服务”模型的“服务标识”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "服务”模型的“服务标识”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "SERVICE@ONEMODEL",
    "objectName": "服务",
    "propertyId": "name",
    "propertyName": "名称",
    "system": "现在有“服务”模型的“名称”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "服务”模型的“名称”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "SERVICE@ONEMODEL",
    "objectName": "服务",
    "propertyId": "accessAddress",
    "propertyName": "访问地址",
    "system": "现在有“服务”模型的“访问地址”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "服务”模型的“访问地址”属性，类型是字符串。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  },
  {
    "objectId": "SERVICE@ONEMODEL",
    "objectName": "服务",
    "propertyId": "artifactSource",
    "propertyName": "制品来源",
    "system": "现在有“服务”模型的“制品来源”属性，类型是字符串，记录服务关联制品的来源，比如如果是腾讯云tdsql提供的mysql服务，则填tdsql。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards",
    "input": "服务”模型的“制品来源”属性，类型是字符串，记录服务关联制品的来源，比如如果是腾讯云tdsql提供的mysql服务，则填tdsql。按视觉重量从低到高，给出2-5种候选显示方案的编排 storyboards。",
    "output": "```json\n[\n  {\n    \"visualWeight\": -1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-secondary)\"\n    }\n  },\n  {\n    \"visualWeight\": 0,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 1,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"medium\",\n      \"fontWeight\": \"bold\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  },\n  {\n    \"visualWeight\": 2,\n    \"display\": \"text\",\n    \"type\": \"string\",\n    \"style\": {\n      \"size\": \"large\",\n      \"color\": \"var(--text-color-default)\"\n    }\n  }\n]\n```",
    "json": [
      {
        "visualWeight": -1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-secondary)"
        }
      },
      {
        "visualWeight": 0,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 1,
        "display": "text",
        "type": "string",
        "style": {
          "size": "medium",
          "fontWeight": "bold",
          "color": "var(--text-color-default)"
        }
      },
      {
        "visualWeight": 2,
        "display": "text",
        "type": "string",
        "style": {
          "size": "large",
          "color": "var(--text-color-default)"
        }
      }
    ]
  }
]
